{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/backgrounds/cityStorm.js","webpack:///./src/components/layouts/center.js"],"names":["NotFoundPage","render","_this$props","this","props","data","location","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layouts_center__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","Theme","plugins","CodePlugin","typography","Typography","Footer","react__WEBPACK_IMPORTED_MODULE_0__","Date","getFullYear","SEO","_ref","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","StyledBackgroundSection","styled","className","children","react_default","gatsby_browser_entry","query","imageData","background","childImageSharp","fluid","gatsby_background_image_default","Tag","backgroundColor","_2633833237","withConfig","displayName","componentId","Container","div","Body","Layout","header","pathname","style","fontFamily","marginTop","boxShadow","textDecoration","color","cityStorm","footer"],"mappings":"2LAKMA,kLACJC,OAAA,WAAS,IAAAC,EACoBC,KAAKC,MAAxBC,EADDH,EACCG,KAAMC,EADPJ,EACOI,SACRC,EAAYF,EAAKG,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjCI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKL,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACG,EAAA,KAAD,CAAMC,GAAG,KAAT,iBAXiBC,IAAMC,WAkBlBnB,YAER,IAAMoB,EAAS,+CCzBtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAIAE,IAAMC,QAAU,CAAC,IAAIC,KAErB,IAAMC,EAAa,IAAIC,IAAWJ,KAOnBG,IACFZ,EAASY,EAAWZ,OACpBC,EAAQW,EAAWX,wCCfhCJ,EAAAC,EAAAC,EAAA,sBAAAe,IAAA,IAAAC,EAAAlB,EAAA,GAAAV,EAAAU,EAAAO,EAAAW,GAEe,SAASD,IACtB,OACE3B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,WADF,MACW,IAAI2B,MAAOC,cADtB,kGCQJ,SAASC,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMpC,EAASiC,EAATjC,MAC9BF,EADuCuC,EAAA1C,KACvCG,KAcFwC,EAAkBJ,GAAepC,EAAKC,aAAamC,YAEzD,OACEK,EAAArC,EAAAC,cAACqC,EAAAtC,EAAD,CACEuC,eAAgB,CACdN,QAEFnC,MAAOA,EACP0C,cAAa,QAAU5C,EAAKC,aAAaC,MACzCoC,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS5C,GAEX,CACE6C,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS9C,EAAKC,aAAa+C,QAE7B,CACEH,KAAI,gBACJC,QAAS5C,GAEX,CACE2C,KAAI,sBACJC,QAASN,IAEXS,OAAOX,KAKfJ,EAAIgB,aAAe,CACjBb,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,2vEC3CAiB,EATiBC,YA9BN,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,UAAWC,EAAdnB,EAAcmB,SAAd,OACxBC,EAAAnD,EAAAC,cAACmD,EAAA,YAAD,CACEC,MAAK,aAWLhE,OAAQ,SAAAI,GACN,IAAM6D,EAAY7D,EAAK8D,WAAWC,gBAAgBC,MAElD,OACEN,EAAAnD,EAAAC,cAACyD,EAAA1D,EAAD,CACE2D,IAAI,MACJV,UAAWA,EACXQ,MAAOH,EACPM,gBAAe,WAEdV,IAtBTzD,KAAAoE,MA6B2BC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,gBAAGhB,CAAH,sJC5B7B,IAAMiB,EAAYjB,IAAOkB,IAAVJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGhB,CAAH,0CAKTmB,EAAOnB,IAAOkB,IAAVJ,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGhB,CAAH,wGAIGpC,YAAO,KAAQA,YAAO,MAI7BwD,kLACJ/E,OAAA,WAAS,IAAAC,EAC+BC,KAAKC,MAAnCE,EADDJ,EACCI,SAAUI,EADXR,EACWQ,MAAOoD,EADlB5D,EACkB4D,SAErBmB,EAAS,KAwBb,MAzBc,MAGV3E,EAAS4E,WACXD,EACElB,EAAAnD,EAAAC,cAAA,MACEsE,MAAO,CACLC,WAAU,yBACVC,UAAW,IAGbtB,EAAAnD,EAAAC,cAACmD,EAAA,KAAD,CACEmB,MAAO,CACLG,UAAS,OACTC,eAAc,OACdC,MAAK,WAEPvE,GAAE,KAEDP,KAOPqD,EAAAnD,EAAAC,cAAC4E,EAAD,KACE1B,EAAAnD,EAAAC,cAACgE,EAAD,KACEd,EAAAnD,EAAAC,cAACkE,EAAD,KACEhB,EAAAnD,EAAAC,cAAA,cAASoE,GACTlB,EAAAnD,EAAAC,cAAA,YAAOiD,GACPC,EAAAnD,EAAAC,cAAC6E,EAAA,EAAD,aAlCSxE,IAAMC,WA0CZ6D","file":"component---src-pages-404-js-7c95d3aea1c6d97c7f10.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layouts/center\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data, location } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"Page Not Found\" />\n        <h1>Not Found</h1>\n        <p>This page doesn&#39;t exist...</p>\n        <p>\n          <Link to=\"/\">Go Back</Link>\n        </p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Theme from \"typography-theme-github\"\nimport CodePlugin from \"typography-plugin-code\"\n\nTheme.plugins = [new CodePlugin()]\n\nconst typography = new Typography(Theme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />Â© {new Date().getFullYear()}, Dave Kelly\n    </footer>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst BackgroundSection = ({ className, children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        background: file(absolutePath: { regex: \"/background-alt.jpg/\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const imageData = data.background.childImageSharp.fluid\n\n      return (\n        <BackgroundImage\n          Tag=\"div\"\n          className={className}\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n        >\n          {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport default StyledBackgroundSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../../utils/typography\"\nimport Background from \"../backgrounds/cityStorm\"\nimport Footer from \"../footer\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Body = styled.div`\n  width: 100%;\n  max-width: 46rem;\n  min-height: 100vh;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  background-color: rgba(255, 255, 255, 0.8);\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = null\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <Background>\n        <Container>\n          <Body>\n            <header>{header}</header>\n            <main>{children}</main>\n            <Footer />\n          </Body>\n        </Container>\n      </Background>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}