{"version":3,"sources":["webpack:///./src/utils/scaffolding.js","webpack:///./src/components/backgrounds/cityRight.js","webpack:///./src/components/layouts/leftEdge.js","webpack:///./src/components/bioFact.js","webpack:///./src/components/externalLink.js","webpack:///./src/components/socialIcon.js","webpack:///./src/components/bio.js","webpack:///./src/components/postsList.js","webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js"],"names":["BREAKPOINT","rhythm","StyledBackgroundSection","styled","_ref","className","children","fileName","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","background","childImageSharp","fluid","gatsby_background_image_default","Tag","backgroundColor","_4249057756","withConfig","displayName","componentId","Container","div","Body","Layout","_this$props","this","props","location","title","header","pathname","style","fontFamily","marginTop","boxShadow","textDecoration","color","to","cityRight","footer","React","Component","BioFact","Icon","display","alignItems","marginBottom","marginRight","ExternalLink","href","rel","SocialIcon","Split","ImageContainer","Bio","_3268313695","_data$site$siteMetada","site","siteMetadata","author","social","bio","childMarkdownRemark","html","bio_Container","gatsby_image_default","fixed","avatar","alt","minWidth","borderRadius","imgStyle","FaMapMarkerAlt","fontSize","github","FaGithub","linkedin","FaLinkedin","pdf","publicURL","FaFileAlt","FaRss","dangerouslySetInnerHTML","__html","PostsList","posts","Fragment","map","_ref2","node","frontmatter","fields","slug","key","date","description","excerpt","BlogIndex","siteTitle","allMarkdownRemark","edges","leftEdge","seo","components_bio","postsList","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","Theme","plugins","CodePlugin","typography","Typography","Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Date","getFullYear","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-cb04476e59bf124b288e.js","sourcesContent":["import { rhythm } from \"./typography\"\n\nexport const BREAKPOINT = rhythm(24)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst BackgroundSection = ({ className, children, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        background: file(absolutePath: { regex: \"/background.jpg/\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const imageData = data.background.childImageSharp.fluid\n\n      return (\n        <BackgroundImage\n          Tag=\"div\"\n          className={className}\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n        >\n          {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport default StyledBackgroundSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { BREAKPOINT } from \"../../utils/scaffolding\"\nimport { rhythm } from \"../../utils/typography\"\nimport Background from \"../backgrounds/cityRight\"\nimport Footer from \"../footer\"\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst Body = styled.div`\n  max-width: ${BREAKPOINT};\n  min-height: 100vh;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  background-color: rgba(255, 255, 255, 0.8);\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = null\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <Background>\n        <Container>\n          <Body>\n            <header>{header}</header>\n            <main>{children}</main>\n            <Footer />\n          </Body>\n        </Container>\n      </Background>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default function BioFact({ Icon, children }) {\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: \"center\",\n        marginBottom: rhythm(1 / 2),\n      }}\n    >\n      <div\n        style={{\n          marginRight: rhythm(1 / 4),\n        }}\n      >\n        <Icon />\n      </div>\n      <div>{children}</div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function ExternalLink({ to, children, title, style }) {\n  return (\n    <a style={style} href={to} title={title} rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport ExternalLink from \"./externalLink\"\n\nexport default function SocialIcon({ Icon, to, title }) {\n  return (\n    <div\n      style={{\n        marginRight: rhythm(1 / 4),\n      }}\n    >\n      <ExternalLink to={to} title={title}>\n        <Icon />\n      </ExternalLink>\n    </div>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport {\n  FaGithub,\n  FaLinkedin,\n  FaMapMarkerAlt,\n  FaRss,\n  FaFileAlt,\n} from \"react-icons/fa\"\nimport { rhythm } from \"../utils/typography\"\nimport BioFact from \"./bioFact\"\nimport SocialIcon from \"./socialIcon\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${rhythm(2.5)};\n`\n\nconst Split = styled.div`\n  display: flex;\n\n  > * {\n    width: 50%;\n  }\n`\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 200, height: 200) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      bio: file(absolutePath: { regex: \"/bio.md/\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          description\n          location\n          social {\n            github\n            linkedin\n          }\n        }\n      }\n      pdf: file(absolutePath: { regex: \"/kelly-resume.pdf/\" }) {\n        publicURL\n        name\n      }\n    }\n  `)\n\n  const { author, location, social } = data.site.siteMetadata\n  const bio = data.bio.childMarkdownRemark.html\n\n  return (\n    <Container>\n      <Split>\n        <ImageContainer>\n          <Image\n            fixed={data.avatar.childImageSharp.fixed}\n            alt={author}\n            style={{\n              marginBottom: rhythm(1 / 2),\n              minWidth: 200,\n              borderRadius: `100%`,\n            }}\n            imgStyle={{\n              borderRadius: `50%`,\n            }}\n          />\n        </ImageContainer>\n        <div>\n          <h3>{author}</h3>\n          <BioFact Icon={FaMapMarkerAlt}>{location}</BioFact>\n          <div\n            style={{\n              display: \"flex\",\n              fontSize: rhythm(1.5),\n            }}\n          >\n            <SocialIcon\n              to={`https://github.com/${social.github}`}\n              Icon={FaGithub}\n              title=\"GitHub\"\n            />\n            <SocialIcon\n              to={`https://linkedin.com/in/${social.linkedin}`}\n              Icon={FaLinkedin}\n              title=\"LinkedIn\"\n            />\n            <SocialIcon to={data.pdf.publicURL} Icon={FaFileAlt} title=\"Resume\" />\n            <SocialIcon to=\"/rss.xml\" Icon={FaRss} title=\"Feed\" />\n          </div>\n        </div>\n      </Split>\n      <section dangerouslySetInnerHTML={{ __html: bio }} />\n    </Container>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction PostsList({ posts }) {\n  return (\n    <React.Fragment>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default PostsList\n","import \"../style.css\"\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/leftEdge\"\nimport SEO from \"../components/seo\"\nimport Bio from \"../components/bio\"\nimport PostsList from \"../components/postsList\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data, location } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title={siteTitle} />\n        <Bio />\n        <PostsList posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Theme from \"typography-theme-github\"\nimport CodePlugin from \"typography-plugin-code\"\n\nTheme.plugins = [new CodePlugin()]\n\nconst typography = new Typography(Theme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />© {new Date().getFullYear()}, Dave Kelly\n    </footer>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}