{"version":3,"sources":["webpack:///./src/components/bioFact.js","webpack:///./src/components/externalLink.js","webpack:///./src/components/socialIcon.js","webpack:///./src/components/bio.js","webpack:///./src/components/postsList.js","webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js","webpack:///./src/utils/scaffolding.js","webpack:///./src/components/backgrounds/cityRight.js","webpack:///./src/components/layouts/leftEdge.js"],"names":["BioFact","_ref","Icon","children","react_default","a","createElement","style","display","alignItems","marginBottom","rhythm","marginRight","ExternalLink","to","title","href","rel","SocialIcon","Container","styled","div","withConfig","displayName","componentId","Split","ImageContainer","Bio","data","_3268313695","_data$site$siteMetada","site","siteMetadata","author","location","social","bio","childMarkdownRemark","html","gatsby_image_default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","FaMapMarkerAlt","fontSize","github","FaGithub","linkedin","FaLinkedin","pdf","publicURL","FaFileAlt","FaRss","dangerouslySetInnerHTML","__html","PostsList","posts","Fragment","map","_ref2","node","frontmatter","fields","slug","key","gatsby_browser_entry","boxShadow","date","description","excerpt","BlogIndex","render","_this$props","this","props","siteTitle","allMarkdownRemark","edges","leftEdge","seo","components_bio","postsList","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","Theme","plugins","CodePlugin","typography","Typography","Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Date","getFullYear","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","BREAKPOINT","StyledBackgroundSection","className","fileName","query","imageData","background","fluid","gatsby_background_image_default","Tag","backgroundColor","_4249057756","Body","Layout","header","pathname","fontFamily","marginTop","textDecoration","color","cityRight","footer"],"mappings":"6MAGe,SAASA,EAATC,GAAqC,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACtC,OACEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAO,OACPC,WAAY,SACZC,aAAcC,YAAO,MAGvBP,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLK,YAAaD,YAAO,OAGtBP,EAAAC,EAAAC,cAACJ,EAAD,OAEFE,EAAAC,EAAAC,cAAA,WAAMH,ICjBG,SAASU,EAATZ,GAAsD,IAA9Ba,EAA8Bb,EAA9Ba,GAAIX,EAA0BF,EAA1BE,SAAUY,EAAgBd,EAAhBc,MAAOR,EAASN,EAATM,MAC1D,OACEH,EAAAC,EAAAC,cAAA,KAAGC,MAAOA,EAAOS,KAAMF,EAAIC,MAAOA,EAAOE,IAAI,uBAC1Cd,GCDQ,SAASe,EAATjB,GAAyC,IAAnBC,EAAmBD,EAAnBC,KAAMY,EAAab,EAAba,GAAIC,EAASd,EAATc,MAC7C,OACEX,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLK,YAAaD,YAAO,OAGtBP,EAAAC,EAAAC,cAACO,EAAD,CAAcC,GAAIA,EAAIC,MAAOA,GAC3BX,EAAAC,EAAAC,cAACJ,EAAD,QCGR,IAAMiB,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,0DAGIT,YAAO,MAGpBc,EAAQL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,kCAQLM,EAAiBN,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,0CAuFLO,EAlFH,WACV,IAAMC,EAAIC,EAAAD,KADME,EAiCqBF,EAAKG,KAAKC,aAAvCC,EAjCQH,EAiCRG,OAAQC,EAjCAJ,EAiCAI,SAAUC,EAjCVL,EAiCUK,OACpBC,EAAMR,EAAKQ,IAAIC,oBAAoBC,KAEzC,OACElC,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,MAAOZ,EAAKa,OAAOC,gBAAgBF,MACnCG,IAAKV,EACL1B,MAAO,CACLG,aAAcC,YAAO,IACrBiC,SAAU,IACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,UAIlBzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK2B,GACL7B,EAAAC,EAAAC,cAACN,EAAD,CAASE,KAAM6C,KAAiBb,GAChC9B,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLC,QAAS,OACTwC,SAAUrC,YAAO,OAGnBP,EAAAC,EAAAC,cAACY,EAAD,CACEJ,GAAE,sBAAwBqB,EAAOc,OACjC/C,KAAMgD,IACNnC,MAAM,WAERX,EAAAC,EAAAC,cAACY,EAAD,CACEJ,GAAE,2BAA6BqB,EAAOgB,SACtCjD,KAAMkD,IACNrC,MAAM,aAERX,EAAAC,EAAAC,cAACY,EAAD,CAAYJ,GAAIc,EAAKyB,IAAIC,UAAWpD,KAAMqD,IAAWxC,MAAM,SAC3DX,EAAAC,EAAAC,cAACY,EAAD,CAAYJ,GAAG,WAAWZ,KAAMsD,IAAOzC,MAAM,YAInDX,EAAAC,EAAAC,cAAA,WAASmD,wBAAyB,CAAEC,OAAQtB,eCzEnCuB,MAlCf,SAAA1D,GAA8B,IAAT2D,EAAS3D,EAAT2D,MACnB,OACExD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACGD,EAAME,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNjD,EAAQiD,EAAKC,YAAYlD,OAASiD,EAAKE,OAAOC,KAEpD,OACE/D,EAAAC,EAAAC,cAAA,WAAS8D,IAAKJ,EAAKE,OAAOC,MACxB/D,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLG,aAAcC,YAAO,OAGvBP,EAAAC,EAAAC,cAAC+D,EAAA,KAAD,CAAM9D,MAAO,CAAE+D,UAAS,QAAYxD,GAAIkD,EAAKE,OAAOC,MACjDpD,IAGLX,EAAAC,EAAAC,cAAA,aAAQ0D,EAAKC,YAAYM,OAE3BnE,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,KACEmD,wBAAyB,CACvBC,OAAQM,EAAKC,YAAYO,aAAeR,EAAKS,6DCnBzDC,kLACJC,OAAA,WAAS,IAAAC,EACoBC,KAAKC,MAAxBlD,EADDgD,EACChD,KAAMM,EADP0C,EACO1C,SACR6C,EAAYnD,EAAKG,KAAKC,aAAajB,MACnC6C,EAAQhC,EAAKoD,kBAAkBC,MAErC,OACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAQhD,SAAUA,EAAUnB,MAAOgE,GACjC3E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAKpE,MAAOgE,IACZ3E,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAC+E,EAAD,CAAWzB,MAAOA,SAVF0B,IAAMC,WAkBjBC,GAFEd,YAEO,gDC1BtBe,EAAAC,EAAAC,EAAA,sBAAAhF,IAAA8E,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,KAAAU,EAAAV,EAAAM,EAAAG,GAIAE,IAAMC,QAAU,CAAC,IAAIC,KAErB,IAAMC,EAAa,IAAIC,IAAWJ,KAOnBG,IACF5F,EAAS4F,EAAW5F,OACpBiF,EAAQW,EAAWX,wCCfhCH,EAAAC,EAAAC,EAAA,sBAAAc,IAAA,IAAAC,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAAM,EAAAW,GAEe,SAASD,IACtB,OACEE,EAAAtG,EAAAC,cAAA,cACEqG,EAAAtG,EAAAC,cAAA,WADF,MACW,IAAIsG,MAAOC,cADtB,kGCQJ,SAASC,EAAT7G,GAAiD,IAAlCuE,EAAkCvE,EAAlCuE,YAAauC,EAAqB9G,EAArB8G,KAAMC,EAAe/G,EAAf+G,KAAMjG,EAASd,EAATc,MAC9BgB,EADuCkF,EAAArF,KACvCG,KAcFmF,EAAkB1C,GAAezC,EAAKC,aAAawC,YAEzD,OACE2C,EAAA9G,EAAAC,cAAC8G,EAAA/G,EAAD,CACEgH,eAAgB,CACdN,QAEFhG,MAAOA,EACPuG,cAAa,QAAUvF,EAAKC,aAAajB,MACzCiG,KAAM,CACJ,CACEO,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASzG,GAEX,CACE0G,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASzF,EAAKC,aAAaC,QAE7B,CACEsF,KAAI,gBACJC,QAASzG,GAEX,CACEwG,KAAI,sBACJC,QAASN,IAEXQ,OAAOV,KAKfF,EAAIa,aAAe,CACjBZ,KAAI,KACJC,KAAM,GACNxC,YAAW,IAUEsC,qgECrFFc,EAAajH,YAAO,+BC0ClBkH,EATiBzG,YA9BN,SAAAnB,GAAA,IAAG6H,EAAH7H,EAAG6H,UAAW3H,EAAdF,EAAcE,SAAdF,EAAwB8H,SAAxB,OACxB3H,EAAAC,EAAAC,cAAC+D,EAAA,YAAD,CACE2D,MAAK,aAWLrD,OAAQ,SAAA/C,GACN,IAAMqG,EAAYrG,EAAKsG,WAAWxF,gBAAgByF,MAElD,OACE/H,EAAAC,EAAAC,cAAC8H,EAAA/H,EAAD,CACEgI,IAAI,MACJP,UAAWA,EACXK,MAAOF,EACPK,gBAAe,WAEdnI,IAtBTyB,KAAA2G,MA6B2BjH,WAAA,CAAAC,YAAA,qCAAAC,YAAA,eAAGJ,CAAH,sJC3B7B,IAAMD,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,mBAIToH,EAAOpH,IAAOC,IAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,2FACKwG,EAEFjH,YAAO,KAAQA,YAAO,MAI7B8H,kLACJ9D,OAAA,WAAS,IAAAC,EAC+BC,KAAKC,MAAnC5C,EADD0C,EACC1C,SAAUnB,EADX6D,EACW7D,MAAOZ,EADlByE,EACkBzE,SAErBuI,EAAS,KAwBb,MAzBc,MAGVxG,EAASyG,WACXD,EACEtI,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACLqI,WAAU,yBACVC,UAAW,IAGbzI,EAAAC,EAAAC,cAAC+D,EAAA,KAAD,CACE9D,MAAO,CACL+D,UAAS,OACTwE,eAAc,OACdC,MAAK,WAEPjI,GAAE,KAEDC,KAOPX,EAAAC,EAAAC,cAAC0I,EAAD,KACE5I,EAAAC,EAAAC,cAACa,EAAD,KACEf,EAAAC,EAAAC,cAACkI,EAAD,KACEpI,EAAAC,EAAAC,cAAA,cAASoI,GACTtI,EAAAC,EAAAC,cAAA,YAAOH,GACPC,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,aAlCS3D,IAAMC,WA0CZkD","file":"component---src-pages-index-js-fc4e9ad5c24ec6c18b1a.js","sourcesContent":["import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\n\nexport default function BioFact({ Icon, children }) {\n  return (\n    <div\n      style={{\n        display: `flex`,\n        alignItems: \"center\",\n        marginBottom: rhythm(1 / 2),\n      }}\n    >\n      <div\n        style={{\n          marginRight: rhythm(1 / 4),\n        }}\n      >\n        <Icon />\n      </div>\n      <div>{children}</div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function ExternalLink({ to, children, title, style }) {\n  return (\n    <a style={style} href={to} title={title} rel=\"noopener noreferrer\">\n      {children}\n    </a>\n  )\n}\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport ExternalLink from \"./externalLink\"\n\nexport default function SocialIcon({ Icon, to, title }) {\n  return (\n    <div\n      style={{\n        marginRight: rhythm(1 / 4),\n      }}\n    >\n      <ExternalLink to={to} title={title}>\n        <Icon />\n      </ExternalLink>\n    </div>\n  )\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport {\n  FaGithub,\n  FaLinkedin,\n  FaMapMarkerAlt,\n  FaRss,\n  FaFileAlt,\n} from \"react-icons/fa\"\nimport { rhythm } from \"../utils/typography\"\nimport BioFact from \"./bioFact\"\nimport SocialIcon from \"./socialIcon\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${rhythm(2.5)};\n`\n\nconst Split = styled.div`\n  display: flex;\n\n  > * {\n    width: 50%;\n  }\n`\n\nconst ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 200, height: 200) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      bio: file(absolutePath: { regex: \"/bio.md/\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n      site {\n        siteMetadata {\n          author\n          description\n          location\n          social {\n            github\n            linkedin\n          }\n        }\n      }\n      pdf: file(absolutePath: { regex: \"/kelly-resume.pdf/\" }) {\n        publicURL\n        name\n      }\n    }\n  `)\n\n  const { author, location, social } = data.site.siteMetadata\n  const bio = data.bio.childMarkdownRemark.html\n\n  return (\n    <Container>\n      <Split>\n        <ImageContainer>\n          <Image\n            fixed={data.avatar.childImageSharp.fixed}\n            alt={author}\n            style={{\n              marginBottom: rhythm(1 / 2),\n              minWidth: 200,\n              borderRadius: `100%`,\n            }}\n            imgStyle={{\n              borderRadius: `50%`,\n            }}\n          />\n        </ImageContainer>\n        <div>\n          <h3>{author}</h3>\n          <BioFact Icon={FaMapMarkerAlt}>{location}</BioFact>\n          <div\n            style={{\n              display: \"flex\",\n              fontSize: rhythm(1.5),\n            }}\n          >\n            <SocialIcon\n              to={`https://github.com/${social.github}`}\n              Icon={FaGithub}\n              title=\"GitHub\"\n            />\n            <SocialIcon\n              to={`https://linkedin.com/in/${social.linkedin}`}\n              Icon={FaLinkedin}\n              title=\"LinkedIn\"\n            />\n            <SocialIcon to={data.pdf.publicURL} Icon={FaFileAlt} title=\"Feed\" />\n            <SocialIcon to=\"/rss.xml\" Icon={FaRss} title=\"Feed\" />\n          </div>\n        </div>\n      </Split>\n      <section dangerouslySetInnerHTML={{ __html: bio }} />\n    </Container>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction PostsList({ posts }) {\n  return (\n    <React.Fragment>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default PostsList\n","import \"../style.css\"\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/leftEdge\"\nimport SEO from \"../components/seo\"\nimport Bio from \"../components/bio\"\nimport PostsList from \"../components/postsList\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data, location } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title={siteTitle} />\n        <Bio />\n        <PostsList posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Theme from \"typography-theme-github\"\nimport CodePlugin from \"typography-plugin-code\"\n\nTheme.plugins = [new CodePlugin()]\n\nconst typography = new Typography(Theme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />© {new Date().getFullYear()}, Dave Kelly\n    </footer>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { rhythm } from \"./typography\"\n\nexport const BREAKPOINT = rhythm(24)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst BackgroundSection = ({ className, children, fileName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        background: file(absolutePath: { regex: \"/background.jpg/\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const imageData = data.background.childImageSharp.fluid\n\n      return (\n        <BackgroundImage\n          Tag=\"div\"\n          className={className}\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n        >\n          {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport default StyledBackgroundSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { BREAKPOINT } from \"../../utils/scaffolding\"\nimport { rhythm } from \"../../utils/typography\"\nimport Background from \"../backgrounds/cityRight\"\nimport Footer from \"../footer\"\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst Body = styled.div`\n  max-width: ${BREAKPOINT};\n  min-height: 100vh;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  background-color: rgba(255, 255, 255, 0.8);\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = null\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <Background>\n        <Container>\n          <Body>\n            <header>{header}</header>\n            <main>{children}</main>\n            <Footer />\n          </Body>\n        </Container>\n      </Background>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}