{"version":3,"sources":["webpack:///./src/components/postNav.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/typography.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js","webpack:///./src/components/backgrounds/cityStorm.js","webpack:///./src/components/layouts/center.js"],"names":["List","styled","ul","withConfig","displayName","componentId","PostNav","_ref","basePath","next","previous","react_default","a","createElement","gatsby_browser_entry","to","fields","slug","rel","frontmatter","title","Title","h1","rhythm","BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$data$site","site","siteMetadata","blogPrefix","siteTitle","_this$props$pageConte","pageContext","center","location","seo","description","excerpt","style","Object","assign","scale","display","marginBottom","date","dangerouslySetInnerHTML","__html","html","postNav","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","Theme","plugins","CodePlugin","typography","Typography","Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Date","getFullYear","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","StyledBackgroundSection","className","children","query","imageData","background","childImageSharp","fluid","gatsby_background_image_default","Tag","backgroundColor","_2633833237","Container","div","Body","Layout","_this$props","header","pathname","fontFamily","marginTop","boxShadow","textDecoration","color","cityStorm","footer"],"mappings":"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","file":"component---src-templates-blog-post-js-18a4e8188918beee175b.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 0 1rem 0;\n  list-style: none;\n  padding: 0;\n`\n\nfunction PostNav({ basePath, next, previous }) {\n  return (\n    <nav>\n      <List>\n        {previous ? (\n          <li>\n            <Link to={`${basePath}${previous.fields.slug}`} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          </li>\n        ) : (\n          <li />\n        )}\n        {next && (\n          <li>\n            <Link to={`${basePath}${next.fields.slug}`} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          </li>\n        )}\n      </List>\n    </nav>\n  )\n}\n\nexport default PostNav\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layouts/center\"\nimport SEO from \"../components/seo\"\nimport PostNav from \"../components/postNav\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Title = styled.h1`\n  margin-top: ${rhythm(1)}px;\n  margin-bottom: 0;\n`\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { blogPrefix, title: siteTitle } = this.props.data.site.siteMetadata\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <Title>{post.frontmatter.title}</Title>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n        </article>\n\n        <PostNav basePath={`/${blogPrefix}`} next={next} previous={previous} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        blogPrefix\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Theme from \"typography-theme-github\"\nimport CodePlugin from \"typography-plugin-code\"\n\nTheme.plugins = [new CodePlugin()]\n\nconst typography = new Typography(Theme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />© {new Date().getFullYear()}, Dave Kelly\n    </footer>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst BackgroundSection = ({ className, children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        background: file(absolutePath: { regex: \"/background-alt.jpg/\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const imageData = data.background.childImageSharp.fluid\n\n      return (\n        <BackgroundImage\n          Tag=\"div\"\n          className={className}\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n        >\n          {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport default StyledBackgroundSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../../utils/typography\"\nimport Background from \"../backgrounds/cityStorm\"\nimport Footer from \"../footer\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Body = styled.div`\n  width: 100%;\n  max-width: 46rem;\n  min-height: 100vh;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  background-color: rgba(255, 255, 255, 0.8);\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = null\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <Background>\n        <Container>\n          <Body>\n            <header>{header}</header>\n            <main>{children}</main>\n            <Footer />\n          </Body>\n        </Container>\n      </Background>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}