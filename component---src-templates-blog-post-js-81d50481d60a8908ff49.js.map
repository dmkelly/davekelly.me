{"version":3,"sources":["webpack:///./src/components/postNav.js","webpack:///./src/templates/blog-post.js"],"names":["List","styled","ul","PostNav","basePath","next","previous","to","fields","slug","rel","frontmatter","title","Title","h1","rhythm","BlogPostTemplate","render","post","this","props","data","markdownRemark","site","siteMetadata","blogPrefix","siteTitle","pageContext","location","description","excerpt","style","scale","display","marginBottom","date","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery"],"mappings":"qLAIMA,EAAOC,IAAOC,GAAV,oEAAGD,CAAH,4GAkCKE,MAzBf,YAAgD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACjC,OACE,6BACE,kBAACN,EAAD,KACGM,EACC,4BACE,kBAAC,OAAD,CAAMC,GAAE,GAAKH,EAAWE,EAASE,OAAOC,KAAQC,IAAI,QAApD,KACKJ,EAASK,YAAYC,QAI5B,6BAEDP,GACC,4BACE,kBAAC,OAAD,CAAME,GAAE,GAAKH,EAAWC,EAAKG,OAAOC,KAAQC,IAAI,QAC7CL,EAAKM,YAAYC,MADpB,U,sDCpBZ,IAAMC,EAAQZ,IAAOa,GAAV,uEAAGb,CAAH,sCACKc,YAAO,IAIjBC,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eADtB,EAEkCH,KAAKC,MAAMC,KAAKE,KAAKC,aAAtDC,EAFD,EAECA,WAAmBC,EAFpB,EAEad,MAFb,EAGoBO,KAAKC,MAAMO,YAA9BrB,EAHD,EAGCA,SAAUD,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQuB,SAAUT,KAAKC,MAAMQ,SAAUhB,MAAOc,GAC5C,kBAAC,IAAD,CACEd,MAAOM,EAAKP,YAAYC,MACxBiB,YAAaX,EAAKP,YAAYkB,aAAeX,EAAKY,UAEpD,iCACE,gCACE,kBAACjB,EAAD,KAAQK,EAAKP,YAAYC,OACzB,uBACEmB,MAAK,iBACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcnB,YAAO,MAGtBG,EAAKP,YAAYwB,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQnB,EAAKoB,QACjD,wBACEP,MAAO,CACLG,aAAcnB,YAAO,OAK3B,kBAAC,EAAD,CAASX,SAAQ,IAAMqB,EAAcpB,KAAMA,EAAMC,SAAUA,M,GAjCpCiC,IAAMC,WAyCxBC,GAFEzB,YAEO","file":"component---src-templates-blog-post-js-81d50481d60a8908ff49.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 0 1rem 0;\n  list-style: none;\n  padding: 0;\n`\n\nfunction PostNav({ basePath, next, previous }) {\n  return (\n    <nav>\n      <List>\n        {previous ? (\n          <li>\n            <Link to={`${basePath}${previous.fields.slug}`} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          </li>\n        ) : (\n          <li />\n        )}\n        {next && (\n          <li>\n            <Link to={`${basePath}${next.fields.slug}`} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          </li>\n        )}\n      </List>\n    </nav>\n  )\n}\n\nexport default PostNav\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layouts/center\"\nimport SEO from \"../components/seo\"\nimport PostNav from \"../components/postNav\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Title = styled.h1`\n  margin-top: ${rhythm(1)}px;\n  margin-bottom: 0;\n`\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const { blogPrefix, title: siteTitle } = this.props.data.site.siteMetadata\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <Title>{post.frontmatter.title}</Title>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n        </article>\n\n        <PostNav basePath={`/${blogPrefix}`} next={next} previous={previous} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        blogPrefix\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}