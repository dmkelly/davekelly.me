{"version":3,"sources":["webpack:///./src/components/backgrounds/cityStorm.js","webpack:///./src/components/layouts/center.js","webpack:///./src/components/postNav.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/typography.js","webpack:///./src/components/footer.js","webpack:///./src/components/seo.js"],"names":["StyledBackgroundSection","styled","_ref","className","children","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","background","childImageSharp","fluid","gatsby_background_image_default","Tag","backgroundColor","_2633833237","withConfig","displayName","componentId","Container","div","Body","rhythm","Layout","_this$props","this","props","location","title","header","pathname","style","fontFamily","marginTop","boxShadow","textDecoration","color","to","cityStorm","footer","React","Component","List","ul","PostNav","next","previous","fields","slug","rel","frontmatter","Title","h1","BlogPostTemplate","post","markdownRemark","siteTitle","site","siteMetadata","_this$props$pageConte","pageContext","center","seo","description","excerpt","Object","assign","scale","display","marginBottom","date","dangerouslySetInnerHTML","__html","html","postNav","pageQuery","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2__","typography_plugin_code__WEBPACK_IMPORTED_MODULE_2___default","Theme","plugins","CodePlugin","typography","Typography","Footer","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Date","getFullYear","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-templates-blog-post-js-ab5d8db7788af1a56749.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport styled from \"styled-components\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nconst BackgroundSection = ({ className, children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        background: file(absolutePath: { regex: \"/background-alt.jpg/\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1920) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const imageData = data.background.childImageSharp.fluid\n\n      return (\n        <BackgroundImage\n          Tag=\"div\"\n          className={className}\n          fluid={imageData}\n          backgroundColor={`#040e18`}\n        >\n          {children}\n        </BackgroundImage>\n      )\n    }}\n  />\n)\n\nconst StyledBackgroundSection = styled(BackgroundSection)`\n  height: 100%;\n  width: 100%;\n  background-attachment: fixed;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport default StyledBackgroundSection\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { rhythm } from \"../../utils/typography\"\nimport Background from \"../backgrounds/cityStorm\"\nimport Footer from \"../footer\"\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Body = styled.div`\n  max-width: 46rem;\n  min-height: 100vh;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n  background-color: rgba(255, 255, 255, 0.8);\n`\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header = null\n\n    if (location.pathname !== rootPath) {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <Background>\n        <Container>\n          <Body>\n            <header>{header}</header>\n            <main>{children}</main>\n            <Footer />\n          </Body>\n        </Container>\n      </Background>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 0 1rem 0;\n  list-style: none;\n  padding: 0;\n`\n\nfunction PostNav({ next, previous }) {\n  return (\n    <nav>\n      <List>\n        {previous ? (\n          <li>\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          </li>\n        ) : (\n          <li />\n        )}\n        {next && (\n          <li>\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          </li>\n        )}\n      </List>\n    </nav>\n  )\n}\n\nexport default PostNav\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Layout from \"../components/layouts/center\"\nimport SEO from \"../components/seo\"\nimport PostNav from \"../components/postNav\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst Title = styled.h1`\n  margin-top: ${rhythm(1)}px;\n  margin-bottom: 0;\n`\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <Title>{post.frontmatter.title}</Title>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n        </article>\n\n        <PostNav next={next} previous={previous} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Theme from \"typography-theme-github\"\nimport CodePlugin from \"typography-plugin-code\"\n\nTheme.plugins = [new CodePlugin()]\n\nconst typography = new Typography(Theme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />© {new Date().getFullYear()}, Dave Kelly\n    </footer>\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}